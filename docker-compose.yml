
services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: globalnews
      POSTGRES_PASSWORD: dev_password_change_in_prod
      POSTGRES_DB: globalnews
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U globalnews -d globalnews"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    ports:
      - "3333:3333"
    environment:
      - NODE_ENV=development
      - PORT=3333
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=globalnews
      - DB_PASSWORD=dev_password_change_in_prod
      - DB_NAME=globalnews
      - DATABASE_URL=postgresql://globalnews:dev_password_change_in_prod@db:5432/globalnews
      - LLM_PROVIDER=ollama
      - LLM_BASE_URL=http://ollama-service:8001
      - LLM_MODEL=llama3.1:8b
      - LLM_MAX_TOKENS=1000
      - LLM_TEMPERATURE=0.3
      - TRANSLATION_SERVICE_URL=http://nllb-service:8000
    depends_on:
      db:
        condition: service_healthy
      nllb-service:
        condition: service_healthy
      ollama-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3333/healthz', (res) => process.exit(res.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - BASE_API=http://api:3333
    depends_on:
      - api

  nllb-service:
    build:
      context: ./llm/nllb
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - HF_HOME=/app/cache
    volumes:
      - nllb_cache:/app/cache
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 30s
      start_period: 120s
      retries: 3

  ollama-service:
    build:
      context: ./llm/ollama
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
      - "11434:11434"
    environment:
      - OLLAMA_HOST=0.0.0.0
    volumes:
      - ollama_data:/home/modeluser/.ollama
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 4G
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8001/health')"]
      interval: 30s
      timeout: 30s
      start_period: 300s
      retries: 5

volumes:
  postgres_data:
  nllb_cache:
  ollama_data:

networks:
  default:
    name: globalnews_network