
services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - api
    restart: unless-stopped
    networks:
      - default

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: globalnews
      POSTGRES_PASSWORD: dev_password_change_in_prod
      POSTGRES_DB: globalnews
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U globalnews -d globalnews"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    ports:
      - "127.0.0.1:3333:3333"
    volumes:
      - ./llm-control:/app/llm-control:ro
      - /tmp:/tmp
      - /var/run/docker.sock:/var/run/docker.sock
      - .:/app/host-project:ro
    environment:
      - NODE_ENV=development
      - PORT=3333
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=globalnews
      - DB_PASSWORD=dev_password_change_in_prod
      - DB_NAME=globalnews
      - DATABASE_URL=postgresql://globalnews:dev_password_change_in_prod@db:5432/globalnews
      - LLM_PROVIDER=ollama
      - LLM_BASE_URL=http://127.0.0.1:11434
      - LLM_MODEL=llama3.1:8b
      - LLM_MAX_TOKENS=1000
      - LLM_TEMPERATURE=0.3
      - TRANSLATION_SERVICE_URL=http://127.0.0.1:8000
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3333/healthz', (res) => process.exit(res.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - default

  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    ports:
      - "127.0.0.1:3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=/api
    depends_on:
      - api
    networks:
      - default


volumes:
  postgres_data:

networks:
  default:
    name: globalnews_network